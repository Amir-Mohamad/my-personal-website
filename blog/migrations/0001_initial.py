# Generated by Django 4.1.1 on 2022-09-22 22:22

import blog.validators
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="کی اپدیت شده ؟"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now=True, verbose_name="کی ساخته شده ؟"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="فعال")),
                ("name", models.CharField(max_length=100, verbose_name="نام")),
                (
                    "slug",
                    models.SlugField(max_length=100, unique=True, verbose_name="شناسه"),
                ),
            ],
            options={
                "verbose_name": "دسته بندی مقاله",
                "verbose_name_plural": "دسته بندی مقالات",
            },
        ),
        migrations.CreateModel(
            name="List",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="کی اپدیت شده ؟"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now=True, verbose_name="کی ساخته شده ؟"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="فعال")),
                ("name", models.CharField(max_length=250, verbose_name="نام")),
                ("description", models.TextField(verbose_name="توضیحات")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="کی اپدیت شده ؟"
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now=True, verbose_name="کی ساخته شده ؟"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="فعال")),
                ("title", models.CharField(max_length=250, verbose_name="عنوان")),
                (
                    "slug",
                    models.SlugField(max_length=250, unique=True, verbose_name="شناسه"),
                ),
                ("description", ckeditor.fields.RichTextField(verbose_name="توضحیات")),
                (
                    "preview",
                    models.CharField(
                        default="", max_length=500, verbose_name="پیش نمایش"
                    ),
                ),
                (
                    "cover",
                    models.ImageField(
                        upload_to="media/article/",
                        validators=[blog.validators.validate_cover],
                        verbose_name="عکس",
                    ),
                ),
                (
                    "vpn",
                    models.BooleanField(
                        default=False, verbose_name="آیا نیاز به vpn دارد ؟"
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="نویسنده",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="blog.category",
                        verbose_name="دسته بندی",
                    ),
                ),
                (
                    "likes",
                    models.ManyToManyField(
                        blank=True,
                        related_name="article_like",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="لایک ها",
                    ),
                ),
                (
                    "list",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="blog.list",
                        verbose_name="لیست",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "verbose_name": "مقاله",
                "verbose_name_plural": "مقالات",
                "ordering": ["-id"],
            },
        ),
    ]
